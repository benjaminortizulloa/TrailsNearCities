sf::st_set_crs(cities,"+proj=lcc +lat_1=33 +lat_2=45 +lat_0=39 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs" )
sf::st_transform(cities,"+proj=lcc +lat_1=33 +lat_2=45 +lat_0=39 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs" )
ct_dist <- sf::st_distance(
sf::st_transform(cities,"+proj=lcc +lat_1=33 +lat_2=45 +lat_0=39 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs")
sf::st_transform(trails,"+proj=lcc +lat_1=33 +lat_2=45 +lat_0=39 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs")
)
ct_dist <- sf::st_distance(
sf::st_transform(cities,"+proj=lcc +lat_1=33 +lat_2=45 +lat_0=39 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs"),
sf::st_transform(trails,"+proj=lcc +lat_1=33 +lat_2=45 +lat_0=39 +lon_0=-96 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs")
)
ct_dist
dim(ct_dist)
ct_dist[1:5, 1:5]
trails$TrailUID
trails$TrailUID %>% distinct
trails$TrailUID %>% unique
colnames(ct_dist) <- trails$TrailUID
cities
rownames(ct_dist) <- cities$City
ct_dist[1:5, 1:5]
ct_dist[1,]
ct_dist[1,] %>% sort()
ct_dist[1,] %>% sort() %>% head
ct_dist[1,] %>% sort() %>% head(10)
ct_dist[1:5, 1:5]
ct_dist["Scottsdale, AZ",] %>% sort() %>% head(10)
ct_dist["Irvine, CA",] %>% sort() %>% head(10)
?units::as_units
test <- ct_dist %>% units::set_units("miles")
ct_dist["Irvine, CA",] %>% sort() %>% head(10)
test["Irvine, CA",] %>% sort() %>% head(10)
test
rm(test)
units(ct_dist) <- "miles"
test["Irvine, CA",] %>% sort() %>% head(10)
ct_dist["Irvine, CA",] %>% sort() %>% head(10)
ct_dist[1:5, 1:5]
colnames(ct_dist) <- trails$TrailUID
rownames(ct_dist) <- cities$City
ct_dist["Irvine, CA",] %>% sort() %>% head(10)
test <- ct_dist %>% units::set_units("miles")
ct_dist[1:5, 1:5]
ct_dist["Irvine, CA",] %>% sort() %>% head(10)
ct_dist["Irvine, CA",] %>% sort() %>% head(10) %>% purrr::transpose()
ct_dist["Irvine, CA",] %>% sort() %>% head(10) %>% as.list()
ct_dist["Irvine, CA",] %>% sort() %>% head(10) %>% as.list() %>% tibble::as_tibble()
ct_dist["Irvine, CA",] %>% sort() %>% head(10) %>% as.list() %>% purrr::imap(function(i, x){
data.frame(TrailUID = i, distance = x)
})
ct_dist["Irvine, CA",] %>% sort() %>% head(10) %>% as.list() %>% purrr::imap(function(x, i){
data.frame(TrailUID = i, distance = x)
}) %>%
do.call(rbind, .)
ct_dist["Irvine, CA",] %>% sort() %>% head(10) %>% as.list() %>% purrr::imap(function(x, i){
data.frame(TrailUID = i, distance = x)
}) %>%
dplyr::bind
ct_dist["Irvine, CA",] %>% sort() %>% head(10) %>% as.list() %>% purrr::imap(function(x, i){
data.frame(TrailUID = i, distance = x)
}) %>%
dplyr::bind_rows()
ct_dist["Irvine, CA",] %>% sort() %>% head(10) %>% as.list() %>% purrr::imap(function(x, i){
data.frame(TrailUID = i, distance = x)
}) %>%
dplyr::bind_rows() %>%
dplyr::mutate(close_rank = 1:10)
?purrr::imap
ct_dist["Irvine, CA",] %>% sort() %>% head(10) %>% as.list() %>% purrr::imap(function(x, i){
data.frame(TrailUID = i, distance = x)
}) %>%
dplyr::bind_rows() %>%
dplyr::mutate(close_rank = 1:10) %>%
dplyr::left_join(trails)
ct_dist["Irvine, CA",] %>% sort() %>% head(10) %>% as.list() %>% purrr::imap(function(x, i){
data.frame(TrailUID = as.integer(i), distance = x)
}) %>%
dplyr::bind_rows() %>%
dplyr::mutate(close_rank = 1:10) %>%
dplyr::left_join(trails)
ten_city_trails <- cities$City %>%
lapply(function(cty){
ct_dist[cty,] %>%
sort() %>%
head(10) %>%
as.list() %>%
purrr::imap(function(x, i){
data.frame(TrailUID = as.integer(i), distance = x)
}) %>%
dplyr::bind_rows() %>%
dplyr::mutate(close_rank = 1:10) %>%
dplyr::left_join(trails)
})
cities
ten_city_trails[[1]]
ten_city_trails[[180]]
ten_city_trails[[183]]
ten_city_trails[[182]]
ten_city_trails[[1]]
ten_city_trails[[2]]
ten_city_trails[[3]]
ten_city_trails[[179]]
cities
cities$closestTrails = ten_city_trails
cities
head(cities, 2)
str(cities)
dplyr$avg_trail_distance <- vapply(ten_city_trails, function(x){mean(x$distance)})
dplyr$avg_trail_distance <- vapply(ten_city_trails, function(x){mean(x$distance)}, double(1))
avg_trail_distance <- vapply(ten_city_trails, function(x){mean(x$distance)}, double(1))
avg_trail_distance
avg_trail_distance <- vapply(ten_city_trails, function(x){mean(x$distance[1:5])}, double(1))
avg_trail_distance
avg_trail_distance <- vapply(ten_city_trails, function(x){mean(x$distance)}, double(1))
ten_city_trails[[1]]
avg_trail_length <- vapply(ten_city_trails, function(x){mean(x$LengthMile)})
avg_trail_length <- vapply(ten_city_trails, function(x){mean(x$LengthMile)}, double(1))
avg_trail_length
MY_GCP_KEY
MY_GCP_KEY = 'AIzaSyABSMIQcM56wLo6M_QNtYzamsg4tn6MynI'
cities[1,]
ten_city_trails
ten_city_trails[[1]]
plot(ten_city_trails[[1]]$geometry)
plot(cities$geometry)
plot(ten_city_trails[[1]]$geometry, col = 'green', add = T)
sf::st_coordinates(cities$geometry[[1]])
cities$geometry[[1]]
sf::st_coordinates(ten_city_trails[[1]]$geometry[[1]])
destination
getDirections <- function(cityGeo, trailGeo){
origin <- sf::st_coordinates(cityGeo)
origin <- paste0('origin=', origin$y, ',', origin$x)
destination <- sf::st_coordinates(trailGeo)
destination <- sf::st_coordinates("destination=", destination$y, ',', destination$x)
url <- paste0("https://maps.googleapis.com/maps/api/directions/json?", origin, "&", destination, "&key=", MY_GCP_KEY)
}
getDirections(cities$geometry[[1]], ten_cv)
getDirections(cities$geometry[[1]], ten_city_trails[[1]]$geometry[[1]])
f::st_coordinates(cities$geometry[[1]])$x
st_coordinates(cities$geometry[[1]])$x
sf::st_coordinates(cities$geometry[[1]])$x
sf::st_coordinates(cities$geometry[[1]])['x']
sf::st_coordinates(cities$geometry[[1]])['X']
sf::st_coordinates(cities$geometry[[1]])
sf::st_coordinates(cities$geometry[[1]])$X
sf::st_coordinates(cities$geometry[[1]])[1]
getDirections <- function(cityGeo, trailGeo){
origin <- sf::st_coordinates(cityGeo)
origin <- paste0('origin=', origin[2], ',', origin[1])
destination <- sf::st_coordinates(trailGeo)
destination <- sf::st_coordinates("destination=", destination[2], ',', destination[1])
url <- paste0("https://maps.googleapis.com/maps/api/directions/json?", origin, "&", destination, "&key=", MY_GCP_KEY)
}
getDirections(cities$geometry[[1]], ten_city_trails[[1]]$geometry[[1]])
getDirections <- function(cityGeo, trailGeo){
origin <- sf::st_coordinates(cityGeo)
origin <- paste0('origin=', origin[2], ',', origin[1])
destination <- sf::st_coordinates(trailGeo)
destination <- paste0("destination=", destination[2], ',', destination[1])
url <- paste0("https://maps.googleapis.com/maps/api/directions/json?", origin, "&", destination, "&key=", MY_GCP_KEY)
}
getDirections(cities$geometry[[1]], ten_city_trails[[1]]$geometry[[1]])
getDirections <- function(cityGeo, trailGeo){
origin <- sf::st_coordinates(cityGeo)
origin <- paste0('origin=', origin[2], ',', origin[1])
destination <- sf::st_coordinates(trailGeo)
destination <- paste0("destination=", destination[2], ',', destination[1])
url <- paste0("https://maps.googleapis.com/maps/api/directions/json?", origin, "&", destination, "&key=", MY_GCP_KEY)
url
}
getDirections(cities$geometry[[1]], ten_city_trails[[1]]$geometry[[1]])
ten_city_trails[[1]]
head(cities$geometry)
head(cities$closestTrails)
head(cities$City)
cities$geometry[[1]]
cities$geometry[1]
head(cities$geometry, 1)
test <- purrr::map2(head(cities$geometry, 1), head(cities$closestTrails, 1), function(x,y){
head(y$geometry, 2) %>%
lapply(function(z){
getDirectionx(x, z)
})
})
test <- purrr::map2(head(cities$geometry, 1), head(cities$closestTrails, 1), function(x,y){
head(y$geometry, 2) %>%
lapply(function(z){
getDirections(x, z)
})
})
test
test <- purrr::map2(head(cities$geometry, 1), head(cities$closestTrails, 1), function(x,y){
head(y$geometry, 2) %>%
lapply(function(z){
jsonlite::read_json(getDirections(x, z))
})
})
test
cityTrailDirections <- purrr::map2(cities$geometry, cities$closestTrails, function(x,y){
y$geometry %>%
lapply(function(z){
jsonlite::read_json(getDirections(x, z))
})
})
saveRDS(cityTrailDirections, '../data/cityTrailDirections.rds')
cityTrailDirections %>% length()
cityTrailDirections[[182]] %>% length()
cityTrailDirections[[182]][[10]]
x <- readRDS('../data/cityTrailDirections.rds')
x[[1]][[1]]
rm(x)
x[[1]][[1]]$step
x[[1]][[1]]$routes
cityTrailDirections[[1]][[1]]$routes
cityTrailDirections[[1]][[1]]$routes[[1]]$legs[[1]]
cityTrailDirections[[1]][[1]]$routes[[1]]$legs[[1]]
cityTrailDirections[[1]][[1]]$routes[[1]]$legs[[1]]$steps
cityTrailDirections[[1]][[1]]$routes[[1]]$legs[[1]]$steps %>% lapply(x, function(x){data.frame(o_lng =  x$start_location_lng, o_lat = x$start_location_lat, d_lng = x$end_location_lng, d_lat = x$end_location_lat)})
cityTrailDirections[[1]][[1]]$routes[[1]]$legs[[1]]$steps %>% lapply( function(x){data.frame(o_lng =  x$start_location_lng, o_lat = x$start_location_lat, d_lng = x$end_location_lng, d_lat = x$end_location_lat)})
cityTrailDirections[[1]][[1]]$routes[[1]]$legs[[1]]$steps %>% lapply( function(x){data.frame(o_lng =  x$start_location_lng, o_lat = x$start_location_lat, d_lng = x$end_location_lng, d_lat = x$end_location_lat)})
cityTrailDirections[[1]][[1]]$routes[[1]]$legs[[1]]$steps %>% lapply( function(x){ x$start_location_lng})
cityTrailDirections[[1]][[1]]$routes[[1]]$legs[[1]]$steps %>% lapply( function(x){ x})
cityTrailDirections[[1]][[1]]$routes[[1]]$legs[[1]]$steps %>% lapply( function(x){data.frame(o_lng =  x$start_location$lng, o_lat = x$start_location$lat, d_lng = x$end_location$lng, d_lat = x$end_location$lat)})
cityTrailDirections[[1]][[1]]$routes[[1]]$legs[[1]]$steps %>% lapply( function(x){data.frame(o_lng =  x$start_location$lng, o_lat = x$start_location$lat, d_lng = x$end_location$lng, d_lat = x$end_location$lat)}) %>% dplyr:: bind_rows()
cityTrailDirections[[1]][[1]]$routes[[1]]$legs[[1]]$steps %>%
lapply( function(x){
rbind(c(x$start_location$lng, x$start_location$lat), c(x$end_location$lng, x$end_location$lat))
})
cityTrailDirections[[1]][[1]]$routes[[1]]$legs[[1]]$steps %>%
lapply( function(x){
rbind(c(x$start_location$lng, x$start_location$lat), c(x$end_location$lng, x$end_location$lat))
}) %>%
sf::st_multilinestring()
cityTrailDirections[[1]][[1]]$routes[[1]]$legs[[1]]$steps %>%
lapply( function(x){
rbind(c(x$start_location$lng, x$start_location$lat), c(x$end_location$lng, x$end_location$lat))
}) %>%
sf::st_multilinestring() %>%
plot(add = T)
cityTrailDirections[[1]][[1]]$routes[[1]]$legs[[1]]$steps %>%
lapply( function(x){
rbind(c(x$start_location$lng, x$start_location$lat), c(x$end_location$lng, x$end_location$lat))
}) %>%
sf::st_multilinestring() %>%
plot()
cities$geometry[1] %>% plot(add = T)
cities$closestTrails[[1]]$geometry %>% plot(add = T)
cityTrailDirections[[1]]
stp
head(cityTrailDirections,1) %>%
lapply(function(cty){
head(cty, 2) %>%
lapply(function(trl){
trl$routes[[1]]$legs[[1]]$steps %>%
lapply(function(stp){
rbind(c(stp$start_location$lng, stp$start_location$lat), c(stp$end_location$lng, stp$end_location$lat))
}) %>%
sf::st_multilinestring()
})
})
head(cityTrailDirections,1) %>%
lapply(function(cty){
cty %>%
lapply(function(trl){
trl$routes[[1]]$legs[[1]]$steps %>%
lapply(function(stp){
rbind(c(stp$start_location$lng, stp$start_location$lat), c(stp$end_location$lng, stp$end_location$lat))
}) %>%
sf::st_multilinestring()
})
})
head(cityTrailDirections,1) %>%
lapply(function(cty){
cty %>%
lapply(function(trl){
trl$routes[[1]]$legs[[1]]$steps %>%
lapply(function(stp){
rbind(c(stp$start_location$lng, stp$start_location$lat), c(stp$end_location$lng, stp$end_location$lat))
}) %>%
sf::st_multilinestring()
}) %>%
sf::st_sfc()
})
cityTrailDirectionShapes <- cityTrailDirections %>%
lapply(function(cty){
cty %>%
lapply(function(trl){
trl$routes[[1]]$legs[[1]]$steps %>%
lapply(function(stp){
rbind(c(stp$start_location$lng, stp$start_location$lat), c(stp$end_location$lng, stp$end_location$lat))
}) %>%
sf::st_multilinestring()
}) %>%
sf::st_sfc()
})
cityTrailDirections[[1]][[1]]
cityTrailDirectionShapes <- cityTrailDirections %>%
lapply(function(cty){
print(paste0("cityLength: ", length(cty)))
cty %>%
lapply(function(trl){
trl$routes[[1]]$legs[[1]]$steps %>%
lapply(function(stp){
rbind(c(stp$start_location$lng, stp$start_location$lat), c(stp$end_location$lng, stp$end_location$lat))
}) %>%
sf::st_multilinestring()
}) %>%
sf::st_sfc()
})
cityTrailDirections[[3]]
cityTrailDirectionShapes <- cityTrailDirections %>%
lapply(function(cty){
print(paste0("cityLength: ", length(cty)))
cty %>%
lapply(function(trl){
trl$routes[[1]]$legs[[1]]$steps %>%
lapply(function(stp){
rbind(c(stp$start_location$lng, stp$start_location$lat), c(stp$end_location$lng, stp$end_location$lat))
}) %>%
sf::st_multilinestring()
}) %>%
sf::st_sfc()
})
cityTrailDirectionShapes <- cityTrailDirections %>%
lapply(function(cty){
print(paste0("cityLength: ", length(cty)))
cty %>%
imap(function(trl, i){
print(i)
trl$routes[[1]]$legs[[1]]$steps %>%
lapply(function(stp){
rbind(c(stp$start_location$lng, stp$start_location$lat), c(stp$end_location$lng, stp$end_location$lat))
}) %>%
sf::st_multilinestring()
}) %>%
sf::st_sfc()
})
cityTrailDirectionShapes <- cityTrailDirections %>%
lapply(function(cty){
print(paste0("cityLength: ", length(cty)))
cty %>%
purrr::imap(function(trl, i){
print(i)
trl$routes[[1]]$legs[[1]]$steps %>%
lapply(function(stp){
rbind(c(stp$start_location$lng, stp$start_location$lat), c(stp$end_location$lng, stp$end_location$lat))
}) %>%
sf::st_multilinestring()
}) %>%
sf::st_sfc()
})
cityTrailDirectionShapes <- cityTrailDirections %>%
purrr::imap(function(cty, i){
print(i)
cty %>%
purrr::imap(function(trl, j){
print(paste0(i, ": ", j))
trl$routes[[1]]$legs[[1]]$steps %>%
lapply(function(stp){
rbind(c(stp$start_location$lng, stp$start_location$lat), c(stp$end_location$lng, stp$end_location$lat))
}) %>%
sf::st_multilinestring()
}) %>%
sf::st_sfc()
})
cityTrailDirections[[3]][[5]]
sf::st_geometry()
sf::st_sf()
sf::st_sf(NULL)
sf::st_linestring()
cityTrailDirectionShapes <- head(cityTrailDirections) %>%
purrr::imap(function(cty, i){
print(i)
cty %>%
purrr::imap(function(trl, j){
print(paste0(i, ": ", j, " (", trl$status, ")"))
if(trl$statye == "ZERO_RESULTS"){
sf::st_linestring()
} else {
trl$routes[[1]]$legs[[1]]$steps %>%
lapply(function(stp){
rbind(c(stp$start_location$lng, stp$start_location$lat), c(stp$end_location$lng, stp$end_location$lat))
}) %>%
sf::st_multilinestring()
}
}) %>%
sf::st_sfc()
})
cityTrailDirectionShapes <- head(cityTrailDirections) %>%
purrr::imap(function(cty, i){
print(i)
cty %>%
purrr::imap(function(trl, j){
print(paste0(i, ": ", j, " (", trl$status, ")"))
if(trl$status == "ZERO_RESULTS"){
sf::st_linestring()
} else {
trl$routes[[1]]$legs[[1]]$steps %>%
lapply(function(stp){
rbind(c(stp$start_location$lng, stp$start_location$lat), c(stp$end_location$lng, stp$end_location$lat))
}) %>%
sf::st_multilinestring()
}
}) %>%
sf::st_sfc()
})
cityTrailDirectionShapes
cityTrailDirectionShapes[[5]]
cityTrailDirectionShapes[[3]]
cityTrailDirectionShapes[[3]] %>% head
cityTrailDirectionShapes[[3]] %>% head(10)
cityTrailDirectionShapes[[3]][1]
cityTrailDirectionShapes[[3]][5]
cityTrailDirectionShapes[[3]][5:10]
cityTrailDirectionShapes <- cityTrailDirections %>%
purrr::imap(function(cty, i){
print(i)
cty %>%
purrr::imap(function(trl, j){
print(paste0(i, ": ", j, " (", trl$status, ")"))
if(trl$status == "ZERO_RESULTS"){
sf::st_linestring()
} else {
trl$routes[[1]]$legs[[1]]$steps %>%
lapply(function(stp){
rbind(c(stp$start_location$lng, stp$start_location$lat), c(stp$end_location$lng, stp$end_location$lat))
}) %>%
sf::st_multilinestring()
}
}) %>%
sf::st_sfc()
})
cities$City[[112]]
cities$closestTrails[[112]]
cities$closestTrails[[3]]
cityTrailDirectionShapes
plot(cityTrailDirectionShapes[[1]])
plot(cityTrailDirectionShapes[[2]])
plot(cityTrailDirectionShapes[[3]])
plot(cityTrailDirectionShapes[[1]])
plot(cityTrailDirectionShapes[[182]])
saveRDS(cityTrailDirectionShapes, '../data/cityTrailDirectionShapes.rds')
cities$avg_trail_distance <- vapply(ten_city_trails, function(x){mean(x$distance)}, double(1))
cities$avg_trail_length <- vapply(ten_city_trails, function(x){mean(x$LengthMile)}, double(1))
cities$closestTrails %>% head
cities$closestTrails[[1]]
cities$closestTrails[[1]] %>% sf::st_drop_geometry()
cities$closestTrails[[1]]$geometry %>% sf::st_coordinates()
cities$closestTrails[[1]] %>% {. %>% dplyr::left_join(sf::st_coordinates(.$geometry)) }
cities$closestTrails[[1]] %>% {. %>% cbind(sf::st_coordinates(.$geometry)) }
cities$closestTrails[[1]]
cities$closestTrails[[1]]  %>% str
cities$closestTrails[[1]] %>% {cbind(., sf::st_coordinates(.$geometry)) }
cities$closestTrails[[1]] %>% cbind(sf::st_coordinates(.$geometry))
cities$closestTrails[[1]] %>% cbind(sf::st_coordinates(.$geometry))  %>% sf::st_sf(geom = cityTrailDirectionShapes[[1]])
cities$closestTrails[[1]] %>% cbind(sf::st_coordinates(.$geometry))  %>% dplyr::select(-geometry) %>% sf::st_sf(geom = cityTrailDirectionShapes[[1]])
cities$closestTrails[[1]] %>% cbind(sf::st_coordinates(.$geometry))  %>% dplyr::select(-geometry) %>% sf::st_sf(geometry = cityTrailDirectionShapes[[1]])
cities$closestTrails[[1]] %>% cbind(sf::st_coordinates(.$geometry))  %>% sf::st_sf(geometry = cityTrailDirectionShapes[[1]])
cityAndDirections <- cities %>%
mutate(
closestTrails = purrr::imap(closestTrails, function(cty, i){
cty %>%
cbind(sf::st_coordinates(.$geometry)) %>%
sf::st_sf(geometry = cityTrailDirectionShapes[[i]])
})
)
cityAndDirections <- cities %>%
dplyr::mutate(
closestTrails = purrr::imap(closestTrails, function(cty, i){
cty %>%
cbind(sf::st_coordinates(.$geometry)) %>%
sf::st_sf(geometry = cityTrailDirectionShapes[[i]])
})
)
cityAndDirections
cityAndDirections$closestTrails %>% head()
cityAndDirections <- cities %>%
dplyr::mutate(
closestTrails = purrr::imap(closestTrails, function(cty, i){
cty %>%
cbind(sf::st_coordinates(.$geometry)) %>%
sf::st_sf(geometry = cityTrailDirectionShapes[[i]], crs = 4326)
})
)
cityAndDirections$closestTrails %>% head()
cityAndDirections
sf::st_write(cityAndDirections, '../data/cityAndDirections.geojson')
cityAndDirections$closestTrails[[1]]
cityAndDirections$closestTrails[[1]] %>% jsonlite::toJSON()
install.packages('geojsonsf')
geojsonsf::sf_geojson(cityAndDirections$closestTrails[[1]])
geojsonsf::sf_geojson(cityAndDirections$closestTrails[[1]]) %>% str
cityAndDirections <- cities %>%
dplyr::mutate(
closestTrails = purrr::imap_chr(closestTrails, function(cty, i){
cty %>%
cbind(sf::st_coordinates(.$geometry)) %>%
sf::st_sf(geometry = cityTrailDirectionShapes[[i]], crs = 4326) %>%
geojsonsf::sf_geojson()
})
)
head(cityAndDirections)
cityAndDirections <- cities %>%
dplyr::mutate(
closestTrails = purrr::imap_chr(closestTrails, function(cty, i){
cty %>%
cbind(sf::st_coordinates(.$geometry)) %>%
sf::st_sf(geometry = cityTrailDirectionShapes[[i]], crs = 4326) %>%
geojsonsf::sf_geojson()
})
)
sf::st_write(cityAndDirections, '../data/cityAndDirections.geojson')
